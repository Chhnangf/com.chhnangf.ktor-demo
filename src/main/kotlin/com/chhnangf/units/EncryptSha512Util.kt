package com.chhnangf.units

import java.math.BigInteger
import java.security.MessageDigest
import java.security.NoSuchAlgorithmException
import kotlin.jvm.Throws

data class CodableException(val code: Long, override val message: String) : Exception(message)
object EncryptSha512Util {

    fun encrypt(input: String): String {
        return try {
            val md = MessageDigest.getInstance("SHA-512")
            val messageDigest = md.digest(input.toByteArray())
            val no = BigInteger(1, messageDigest)
            no.toString(16)
        } catch (e: NoSuchAlgorithmException) {
            throw CodableException(-2207, e.localizedMessage)
        }
    }

    fun match(source: String, hash: String): Boolean {
        return try {
            encrypt(source).equals(hash, true)
        } catch (e: Exception) {
            e.printStackTrace()
            false
        }
    }

    fun encryptOrNull(input: String): String? = try { encrypt(input) } catch (e: Exception) { null }

    @Throws(NoSuchAlgorithmException::class)
    @JvmStatic
    fun main(args: Array<String>) {
        println("HashCode Generated by SHA-256 for: ")
        val word = "Lifemark-2024(Power by ktor)"
        println("$word : ${encrypt(word)}")
        println("Match result: ${match(word, encrypt(word))}.")
    }
}